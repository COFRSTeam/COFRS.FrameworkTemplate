{
	"Serilog": {
		"Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Sinks.Async" ],
		"MinimumLevel": "Debug",
		"WriteTo": [
			{ "Name": "Console" },
			{
				"Name": "Async",
				"Args": {
					"configure": [
						{
							"Name": "File",
							"Args": {
								"path": "%APPDATA%\\$safeprojectname$\\Service.log",
								"rollingInterval": "Day",
								"shared": true,
								"retainedFileCountLimit": 5
							}
						}
					]
				}
			}
		],
		"Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ]
	},
	"ApiSettings": {
		"DisplayName": "$safeprojectname$",
		"RootUrl": "https://$safeprojectname$.com",
		"QueryLimit": 500,
		"CacheLimit": 10000,
		"Timeout": "00:00:03",
		"AllowedCors": "*",
		"CompanyName": "$companymoniker$",
		//	NOTE: The following paramters are not necessary, and are included here only to document
		//				their existence. The indicated headers will be constructed from the company name 
		//				by default. The only reason to include any of the following is if the desired header
		//				does not conform to the standard format.
		//
		//				For example, a company called Acme may with to share services with a consortum 
		//				of 3rd pary entities, and all parties in the consortum wish to share standard 
		//				corrlation ids, so that the correlationId header would be x-consortum-correlationid,
		//				instead of the usual x-acme-correlationid.
		"VersionHeader": "application/vnd.$companymoniker$.v(v)+json",
		"CorrelationIdHeader": "x-$companymoniker$-correlation-id",
		"MediaTypeHeader": "x-$companymoniker$-media-type"
	},
	"ConnectionStrings": {
		"DefaultConnection": "Server=localhost;Database=master;Trusted_Connection=True;",
	$if$ ($securitymodel$ == OAuth)},
	"OAuth2": {
		"AuthorityURL": "https://IdentityServer.com",
		"Scopes": [
			{
				"Name": "scope1",
				"Description": "The brief description of scope1",
				"Secret": "scope-secret-1"
			},
			{
				"Name": "scope2",
				"Description": "The brief description of scope2",
				"Secret": "scope-secret-2"
			}
		],
		"Policies": [
			{
				"Policy": "ForReadOnly",
				"Scopes": [
					"scope1",
					"scope2"
				]
			},
			{
				"Policy": "ForUpdate",
				"Roles": [
					"role1",
					"role2"
				]
			},
			{
				"Policy": "Admin",
				"Claims": [
					{
						"Claim": "claim1",
						"Values": [
							"value1",
							"value2"
						]
					},
					{
						"Claim": "claim2",
						"Values": [
							"value3",
							"value4"
						]
					}
				]
			}
		]
	$endif$}
}
